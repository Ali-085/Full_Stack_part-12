services:
  blog-frontend:
    image: blog-frontend-dev
    container_name: blog-frontend-proxy
    build:
      context: ./blog-frontend
      dockerfile: dev.Dockerfile
    networks:
      - blog-network
    volumes:
      - ./blog-frontend:/usr/src/app     # mount source code
      - /usr/src/app/node_modules       # avoid overwriting node_modules

  mongo:
    image: mongo
    container_name: blog-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./blog-backend/models/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - blog-network

  blog-backend:
    image: blog-backend-dev
    container_name: blog-backend-proxy
    build:
      context: ./blog-backend
      dockerfile: dev.Dockerfile
    networks:
      - blog-network
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://the_username:the_password@mongo:27017/the_database?authSource=the_database
      - SECRET=mysecret
    volumes:
      - ./blog-backend:/usr/src/app     # mount source code
      - /usr/src/app/node_modules       # avoid overwriting node_modules
    depends_on:
      - "mongo"

  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - blog-frontend
      - blog-backend
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
