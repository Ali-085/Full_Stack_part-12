services:
  todo-frontend:
    image: todo-frontend-dev
    container_name: todo-frontend-proxy
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    environment:
      - VITE_BACKEND_URL=http://127.0.0.1:80/api
    networks:
      - todo-network
    volumes:
      - ./todo-frontend:/usr/src/app     # mount source code
      - /usr/src/app/node_modules       # avoid overwriting node_modules

  mongo:
    image: mongo
    container_name: todo-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - todo-network

  redis:
    image: redis:7
    container_name: todo-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    networks:
      - todo-network

  todo-backend:
    image: todo-backend-dev
    container_name: todo-backend-proxy
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    networks:
      - todo-network
    environment:
      - NODE_ENV=development
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database?authSource=the_database  # Fixed Mongo URL
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./todo-backend:/usr/src/app     # mount source code
      - /usr/src/app/node_modules       # avoid overwriting node_modules
    depends_on:
      - "mongo"
      - "redis"

  nginx:
    image: nginx:alpine
    container_name: todo-nginx
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - todo-frontend
      - todo-backend
    networks:
      - todo-network

networks:
  todo-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
